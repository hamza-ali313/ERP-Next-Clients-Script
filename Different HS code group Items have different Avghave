frappe.ui.form.on('Custom Invoice', {
    
    // fetching all items from CT 
    
    invoice_no: function(frm) {
        if (frm.doc.invoice_no) {
            frappe.call({
                method: 'frappe.client.get',
                args: {
                    doctype: 'Sales Invoice',
                    name: frm.doc.invoice_no
                },
                callback: function(r) {
                    if (r.message) {
                        const table = r.message.items || []; 
                        frm.clear_table("ct_");
                        table.forEach((row) => {
                            let new_row = frm.add_child("ct_");
                            new_row.quantity = row.qty;
                            new_row.rate = row.amount;
                            new_row.uom = row.uom;
                            new_row.hs_code = row.custom_hs_code;
                        });
                        frm.refresh_field("ct_");
                    }
                }
            });
        }
    },
    
    // fetching all items from CT 
    
    // For multiple HS code different Average Values start
    
    before_save: function(frm) {
        let hsCodeGroups = {};

        (frm.doc.ct_ || []).forEach(item => {
            const hs = item.hs_code || "N/A";

            if (!hsCodeGroups[hs]) {
                hsCodeGroups[hs] = {
                    desc:"",
                    rate: 0,
                    count: 0
                };
            }
            
            if(!hsCodeGroups[hs].desc) {
                hsCodeGroups[hs].desc = item.item_description
            }
            hsCodeGroups[hs].rate += parseFloat(item.rate);
            hsCodeGroups[hs].count += parseFloat(item.quantity);
        });
        
        frm.clear_table("hs_table");
        
        for (const hs in hsCodeGroups) {
            const group = hsCodeGroups[hs];
            let row = frm.add_child("hs_table");
            row.item_description = group.desc;
            row.hs_code = hs;
            row.total_rate = flt(group.rate, 4);
            row.total_qty = group.count;
            row.avg_rate = flt(group.rate / group.count, 4);
        }

        // Step 5: Refresh child table field
        frm.refresh_field("hs_table");
        
         console.log(hsCodeGroups)
    }
    // For multiple HS code different Average Values End
});
